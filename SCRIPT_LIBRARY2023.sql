CREATE DATABASE LIBRARY
go
USE LIBRARY
GO
CREATE TABLE USERS_ROLES(
	USER_ROLE_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
    ROLE VARCHAR(50) NOT NULL
)
GO
CREATE TABLE USERS (
    USER_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	ROLE_ID BIGINT,
    USER_NAME VARCHAR(50) NOT NULL,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    CREATED_AT DATETIME DEFAULT GETDATE() NOT NULL
	FOREIGN KEY (ROLE_ID) REFERENCES USERS_ROLES(USER_ROLE_ID)
);
GO
CREATE TABLE CATEGORIES (
CATEGORY_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
CATEGORY_NAME VARCHAR(50) NOT NULL);
go

CREATE TABLE ACQUISITION_TYPES(
ACQUISITION_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
ACQUISITION_TYPE VARCHAR(50) NOT NULL);
go

CREATE TABLE CATALOGS (
CATALOG_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
CATALOG_NAME VARCHAR(100) NOT NULL);
go

CREATE TABLE EDITORIALS (
EDITORIAL_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
EDITORIAL_NAME VARCHAR(100) NOT NULL);
go
		 
CREATE TABLE AUTHORS (AUTHOR_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
AUTHOR_NAME VARCHAR(200) NOT NULL);
go

CREATE TABLE EDITIONS (EDITION_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
					  EDITION_NUMBER VARCHAR(50) NOT NULL)


CREATE TABLE COUNTRIES (
COUNTRY_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL, 
COUNTRY_NAME VARCHAR(100) NOT NULL);
go

CREATE TABLE BOOKS (BOOK_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
					ID_CATEGORY INT NOT NULL,
					ID_ACQUISITION INT NOT NULL,
					ID_EDITORIAL BIGINT NOT NULL,
					ID_AUTHOR BIGINT NOT NULL,
					ID_EDITION INT NOT NULL,
					ID_COUNTRY INT NOT NULL,
					ID_CATALOG INT NOT NULL,
					DEWEY VARCHAR(50) NOT NULL,
					CUTER VARCHAR(50) NOT NULL,
					TITLE VARCHAR(200) NOT NULL,
					YEAR VARCHAR(5) NOT NULL,
					EJEMPLARS INT NOT NULL,
					EXISTENCES INT NOT NULL,
					COVER VARCHAR(300) NOT NULL,
					FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES(CATEGORY_ID),
					FOREIGN KEY (ID_ACQUISITION) REFERENCES ACQUISITION_TYPES(ACQUISITION_ID),
					FOREIGN KEY (ID_EDITORIAL) REFERENCES EDITORIALS(EDITORIAL_ID),
					FOREIGN KEY (ID_AUTHOR) REFERENCES AUTHORS(AUTHOR_ID),
					FOREIGN KEY (ID_EDITION) REFERENCES EDITIONS(EDITION_ID),
					FOREIGN KEY (ID_COUNTRY) REFERENCES COUNTRIES(COUNTRY_ID),
					FOREIGN KEY (ID_CATALOG) REFERENCES CATALOGS(CATALOG_ID));
					go

CREATE TABLE LOAN_TYPES(
TYPES_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
TYPES_NAME VARCHAR(50) NOT NULL);-------------------------
go

CREATE TABLE RESERVATION_STATUS(
RESERVATION_ID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
STATUS_NAME VARCHAR(50) NOT NULL);
go

CREATE TABLE LOANS(LOAN_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
				  ID_TYPE INT NOT NULL,
				  ID_RESERVATION INT NOT NULL,
				  ID_LENDER BIGINT NULL,
				  USER_ID BIGINT NULL,
				  ID_BOOK BIGINT NOT NULL,
				  COPY INT NOT NULL,---------------------------
				  FEE MONEY NOT NULL,
				  LENDER_CONTACT VARCHAR(9) NOT NULL,
				  REGISTRATION_DATE DATETIME NOT NULL,
				  STATUS BIT NOT NULL,
				  FOREIGN KEY (ID_TYPE) REFERENCES LOAN_TYPES(TYPES_ID),
				  FOREIGN KEY (ID_RESERVATION) REFERENCES RESERVATION_STATUS(RESERVATION_ID),
				  FOREIGN KEY (ID_BOOK) REFERENCES BOOKS(BOOK_ID)
				  );
				  go

CREATE TABLE LOAN_DATES(LOAN_DATE_ID BIGINT PRIMARY KEY IDENTITY(1,1) NOT NULL,
						ID_LOAN BIGINT NOT NULL,
						START_DATE DATETIME NOT NULL,---------------------------
						END_DATE DATETIME NOT NULL,
						STATUS BIT NOT NULL,
						FOREIGN KEY (ID_LOAN) REFERENCES LOANS(LOAN_ID));
						go
create table POSTS_CATEGORIES(
	ID bigint primary key identity(1,1),
	NAME varchar(255) not null,
);
GO

CREATE TABLE POSTS(
	ID BIGINT PRIMARY KEY IDENTITY(1,1),
	CATEGORY_ID BIGINT NOT NULL,
	TITLE VARCHAR(250) NOT NULL,
	CONTENT VARCHAR(4000) NOT NULL,
	CREATED_AT DATETIME NOT NULL DEFAULT GETDATE()
	foreign key(CATEGORY_ID) REFERENCES POSTS_CATEGORIES(ID)
);
GO

CREATE TABLE POSTS_IMAGES(
	ID BIGINT PRIMARY KEY IDENTITY(1,1),
	POST_ID BIGINT NOT NULL,
	PATH VARCHAR(300) NOT NULL,
	FOREIGN KEY (POST_ID) REFERENCES POSTS(ID),
);
GO
create table POSTS_DOCS(
	ID bigint primary key identity(1,1),
	POST_ID bigint not null,
	PATH varchar(300) not null,
	NAME varchar(255) not null,
	foreign key(POST_ID) REFERENCES POSTS(ID)
);
create table PINNED_POSTS(
	ID bigint primary key IDENTITY(1,1),
	POST_ID BIGINT NOT NULL,
	CREATED_AT DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (POST_ID) REFERENCES POSTS(ID)
);



--INSERCCI�N DE REGISTROS PREDETERMINADOS
INSERT INTO CATEGORIES VALUES('Software'),('Mercadeo'),('Turismo'),('Electrica');

INSERT INTO ACQUISITION_TYPES VALUES ('Compra'),('Donacion');

INSERT INTO CATALOGS VALUES ('Software'),('Mercadeo'),('Turismo'),('Electrica');

INSERT INTO LOAN_TYPES VALUES ('Local'),('Externo');
 
INSERT INTO RESERVATION_STATUS VALUES ('Prestado'),('Devuelto'),('Reservado'),('Renovado'),('Cancelado');

INSERT INTO POSTS_CATEGORIES VALUES ('Noticias');

INSERT INTO USERS_ROLES VALUES ('Administrador');


INSERT INTO USERS (ROLE_ID, USER_NAME, PASSWORD_HASH) VALUES (1, 'Test', 'c06db68e819be6ec3d26c6038d8e8d1f'); --contraseña desencriptada: test12345