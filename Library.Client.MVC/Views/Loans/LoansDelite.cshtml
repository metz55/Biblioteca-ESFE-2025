@model IEnumerable<Library.DataAccess.Domain.Loans>
@{
    ViewData["Title"] = "LoansDelite";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 20;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    var loanIds = new List<long>();
    List<Library.DataAccess.Domain.LoanTypes> loanTypes = ViewBag.LoansTypes as List<Library.DataAccess.Domain.LoanTypes>;
    List<Library.DataAccess.Domain.ReservationStatus> reservations = ViewBag.ReservationStatus as List<Library.DataAccess.Domain.ReservationStatus>;
}

<style>
    body {
        overflow-x: hidden;
    }

    .spacer {
        margin-right: 20px;
    }

    #contenedor-principal {
        border-radius: 1rem;
    }

        #search-button,
        #selectRedireccion,
        #contenedor-principal input,
        #contenedor-principal select {
            transition: all 0.3s ease;
        }

            #search-button:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            }

    @@media (max-width: 768px) {
        .form-busqueda {
            flex-direction: column !important;
            align-items: stretch !important;
        }

        .spacer {
            margin-right: 0 !important;
            margin-bottom: 10px !important;
        }

        table.table td,
        table.table th {
            font-size: 14px;
            white-space: nowrap;
        }

        .table-responsive {
            overflow-x: auto;
        }
    }
</style>

<div class="card" id="contenedor-principal">
    <div class="card-body">
        <h1 style="padding:15px; font-family: 'Poppins', sans-serif; font-weight: 600; margin-left: -15px;">Préstamos Eliminados</h1>
        <div class="d-flex flex-wrap form-busqueda mb-3">
            <form asp-action="LoansDelite" class="d-flex flex-wrap form-busqueda w-100" method="get">
                <div class="spacer">
                    <input type="text" placeholder="Código de Estudiante" class="form-control" name="studentCode" value="@ViewData["studentCode"]" />
                </div>
                <div class="spacer">
                    <select name="ID_TYPE" id="reservationSelect" class="form-control">
                        <option selected value="0">Tipo de Préstamo</option>
                        @foreach (var item in loanTypes)
                        {
                            <option value="@item.TYPES_ID">@item.TYPES_NAME</option>
                        }
                    </select>
                </div>
                <div class="spacer">
                    <select id="selectRedireccion" class="form-control">
                        <option selected value="">Préstamos</option>
                        <option value="opcion1">Activos</option>
                        <option value="opcion2">Eliminados</option>
                    </select>
                </div>
                <div class="spacer d-flex align-items-center">
                    <label class="control-label me-2 mb-0">Top</label>
                    <select name="top_aux" class="form-control">
                        @foreach (var item in tops)
                        {
                            string strItem = item != -1 ? item.ToString() : "Todos";
                            <option value="@item" selected="@(item == topActual)">@strItem</option>
                        }
                    </select>
                </div>
                <div class="spacer">
                    <button id="search-button" type="submit" class="btn btn-secondary">
                        <i class="bi bi-reply-fill"></i> Buscar
                    </button>
                </div>
            </form>
        </div>
        <hr />
        <!-- Tabla -->
        <div class="table-responsive">
            <table id="customers" class="table table-striped table-bordered align-middle">
                <thead>
                    <tr>
                        <th class="borIz">@Html.DisplayNameFor(model => model.LOAN_ID)</th>
                        <th>@Html.DisplayNameFor(model => model.ID_TYPE)</th>
                        <th>@Html.DisplayNameFor(model => model.ID_RESERVATION)</th>
                        <th>Código</th>
                        <th>Nombre del Estudiante</th>
                        <th>Carrera</th>
                        <th>@Html.DisplayNameFor(model => model.ID_BOOK)</th>
                        <th>@Html.DisplayNameFor(model => model.STATUS)</th>
                        <th class="borDer">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        bool hasResults = false;
                    }
                    @foreach (var item in Model)
                    {
                        if (item.STATUS == false)
                        {
                            hasResults = true;
                            loanIds.Add(item.ID_LENDER);
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.LOAN_ID)</td>
                                <td>@Html.DisplayFor(modelItem => item.LoanTypes.TYPES_NAME)</td>
                                <td>@Html.DisplayFor(modelItem => item.ReservationStatus.STATUS_NAME)</td>
                                <td class="tdStudentCode_@item.ID_LENDER">Cargando...</td>
                                <td class="tdStudentName_@item.ID_LENDER">Cargando...</td>
                                <td class="tdStudentCareer_@item.ID_LENDER">Cargando...</td>
                                <td>@Html.DisplayFor(modelItem => item.Books.TITLE)</td>
                                <td>
                                    @if (item.STATUS == true)
                                    {
                                        <span>ACTIVO</span>
                                    }
                                    else
                                    {
                                        <span>ELIMINADO</span>
                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("Edit", new { id = item.LOAN_ID })" class="btn btn-info" style="background: #1D4ED8">
                                        <i class="bi bi-eye"></i> Editar
                                    </a>
                                </td>
                            </tr>
                        }
                        numRegistros++;
                        if (numRegistros == numRegistrosPorPage)
                        {
                            numPage++;
                            numRegistros = 0;
                        }
                    }
                    @if (!hasResults)
                    {
                        <tr>
                            <td colspan="9" class="text-center">No se encontraron préstamos eliminados.</td>
                        </tr>
                    }
                    @if (numRegistros == 0 && numPage > 1)
                    {
                        numPage--;
                    }
                </tbody>
            </table>
        </div>
        @if (numPage > 1)
        {
            <div class="row" style="overflow:auto">
                <div class="col-md-12">
                    <ul class="pagination paginationjs" data-numpage="@numPage" data-pageactive="1">
                        <li class="page-item" data-typepage="Previous"><a class="page-link" href="#">Anterior</a></li>
                        @for (var i = 1; i <= numPage; i++)
                        {
                            <li class="page-item" data-page="@i" data-typepage="Item"><a class="page-link" href="#">@i</a></li>
                        }
                        <li class="page-item" data-typepage="Next"><a class="page-link" href="#">Siguiente</a></li>
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var loanIds = @Html.Raw(Json.Serialize(loanIds));
        loanIds.forEach(function (id) {
            fnBuscarEstudiante(id);
        });
    });

    function fnBuscarEstudiante(id) {
        $.ajax({
            method: 'POST',
            url: '@Url.Action("BuscarEstudianteId", "Loans")',
            data: { id: id },
            datatype: 'json',
            success: function (data) {
                $('.tdStudentCode_' + id).text(data.studentCode || "No disponible");
                $('.tdStudentName_' + id).text(data.fullName || "No disponible");
                $('.tdStudentCareer_' + id).text(data.career || "No disponible");
            },
            error: function () {
                $('.tdStudentCode_' + id).text("No disponible");
                $('.tdStudentName_' + id).text("No disponible");
                $('.tdStudentCareer_' + id).text("No disponible");
            }
        });
    }

    function redirigirYRestablecer() {
        var select = document.getElementById('selectRedireccion');
        var selectedOption = select.value;
        var redirectUrl = '';
        switch (selectedOption) {
            case 'opcion0':
                redirectUrl = '/Loans';
                break;
            case 'opcion1': 
                redirectUrl = '/Loans/Index';
                break;
            case 'opcion2':
                redirectUrl = '/Loans/LoansDelite';
                break;
        }
        if (redirectUrl !== '') {
            window.location.href = redirectUrl;
        }
        select.selectedIndex = 0;
    }

    document.getElementById('selectRedireccion').addEventListener('change', redirigirYRestablecer);
</script>



