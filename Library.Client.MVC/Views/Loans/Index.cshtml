@model IEnumerable<Library.DataAccess.Domain.Loans>

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<Library.DataAccess.Domain.LoanTypes> loanTypes = ViewBag.LoansTypes as List<Library.DataAccess.Domain.LoanTypes>;
    List<Library.DataAccess.Domain.ReservationStatus> reservations = ViewBag.ReservationStatus as List<Library.DataAccess.Domain.ReservationStatus>;
}

<style>
    body {
        overflow-x: hidden;
    }

    .spacer {
        margin-right: 20px;
    }

    #contenedor-principal {
        border-radius: 0.5rem;
    }

    #contenedor-principal {
        border-radius: 0.5rem;
        transition: all 0.3s ease;
    }

        #contenedor-principal:hover {
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
            border: 1px solid #e5e7eb;
        }

    #btn-create {
        transition: all 0.3s ease;
    }

        #btn-create:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
        }

    @@media (max-width: 768px) {
        .form-busqueda {
            flex-direction: column !important;
            align-items: stretch !important;
        }

        .spacer {
            margin-right: 0 !important;
            margin-bottom: 10px !important;
        }

        #btn-create {
            width: 100% !important;
            margin-bottom: 15px;
            background-color: #10B981;
        }

        table.table td,
        table.table th {
            font-size: 14px;
            white-space: nowrap;
        }

        .table-responsive {
            overflow-x: auto;
        }
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 15px;
        gap: 5px;
    }

    .page-btn {
        display: inline-block;
        padding: 6px 12px;
        border: 1px solid #d1d5db;
        background-color: #f9fafb;
        color: #374151;
        text-decoration: none;
        border-radius: 5px;
        font-size: 14px;
        transition: all 0.2s ease;
    }

        .page-btn:hover {
            background-color: #e5e7eb;
            color: #111827;
        }

        .page-btn.active {
            background-color: #d1d5db;
            color: #111827;
            font-weight: bold;
            border-color: #9ca3af;
        }

    .fade-page {
        opacity: 0;
        transition: opacity 0.5s ease;
    }

        .fade-page.show {
            opacity: 1;
        }
</style>

<div class="card" id="contenedor-principal">
    <div class="card-body">
        <h1 style="padding:15px; font-family: 'Poppins', sans-serif; font-weight: 600; margin-left: -15px;">Préstamos</h1>

        <div class="row g-2 mb-3 align-items-center">
            <div class="col-12 col-md-auto">
                <a asp-action="Create" class="btn btn-success w-100" id="btn-create">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                    </svg>
                    <i class="bi bi-plus-square"></i> Crear Nuevo
                </a>
            </div>
            <div class="col">
                <form asp-action="Index" class="d-flex form-busqueda flex-wrap" method="get">
                    <div class="spacer">
                        <input type="text" placeholder="Código de Estudiante" class="form-control" name="studentCode" value="@ViewData["studentCode"]" />
                    </div>
                    <div class="spacer">
                        <select name="ID_TYPE" class="form-control">
                            <option selected value="0">Tipo de Préstamo</option>
                            @foreach (var item in loanTypes)
                            {
                                <option value="@item.TYPES_ID">@item.TYPES_NAME</option>
                            }
                        </select>
                    </div>
                    <div class="spacer">
                        <select name="ID_RESERVATION" class="form-control">
                            <option selected value="0">Estado de Reservación</option>
                            @foreach (var item in reservations)
                            {
                                if (item.RESERVATION_ID != 2 && item.RESERVATION_ID != 5)
                                {
                                    <option value="@item.RESERVATION_ID">@item.STATUS_NAME</option>
                                }
                            }
                        </select>
                    </div>
                    @*<div class="spacer d-flex align-items-center">
                        <label class="control-label me-2 mb-0">Top</label>
                        <select name="top_aux" class="form-control">
                            @foreach (var item in tops)
                            {
                                string strItem = item != -1 ? item.ToString() : "Todos";
                                string selected = item == topActual ? "selected" : "";
                                <option value="@item" selected="@selected">@strItem</option>
                            }
                        </select>
                    </div>*@
                    <div class="spacer">
                        <select id="selectRedireccion" class="form-control">
                            <option selected value="">Préstamos</option>
                            <option value="opcion2">Eliminados</option>
                        </select>
                    </div>
                    <div class="spacer">
                        <button id="search-button" type="submit" class="btn btn-secondary">
                            <i class="bi bi-reply-fill"></i> Buscar
                        </button>
                    </div>
                    <input type="hidden" name="page" value="@ViewBag.PaginaActual" />

                </form>
            </div>
        </div>

        <hr />

        <div class="table-responsive fade-page show" id="tableContainer">
            <table id="customers" class="table">
                <thead>
                    <tr>
                        <th class="borIz">@Html.DisplayNameFor(model => model.LOAN_ID)</th>
                        <th>@Html.DisplayNameFor(model => model.ID_TYPE)</th>
                        <th>@Html.DisplayNameFor(model => model.ID_RESERVATION)</th>
                        <th>Código</th>
                        <th>Nombre del Estudiante</th>
                        <th>Carrera</th>
                        <th>@Html.DisplayNameFor(model => model.ID_BOOK)</th>
                        <th>@Html.DisplayNameFor(model => model.STATUS)</th>
                        <th class="borDer">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var loanIds = new List<long>();
                        bool hasResults = false;
                    }
                    @foreach (var item in Model)
                    {
                        if (item.ID_RESERVATION != 2 && item.ID_RESERVATION != 5 && item.STATUS == true)
                        {
                            hasResults = true;
                            loanIds.Add(item.ID_LENDER);

                            var loanInfo = ViewBag.LoanDatesList[item.LOAN_ID];
                            var isOverdue = loanInfo.Item2;

                            <tr>
                                <td>@item.LOAN_ID</td>  
                                <td>@item.LoanTypes?.TYPES_NAME</td>
                                <td style="@(isOverdue ? "color: red; font-weight: bold;" : "")">
                                    @item.ReservationStatus?.STATUS_NAME
                                    @if (isOverdue)
                                    {
                                        <span class="tooltiptext">/ No Devuelto</span>
                                    }
                                </td>
                                <td class="tdStudentCode_@item.ID_LENDER">Cargando...</td>
                                <td class="tdStudentName_@item.ID_LENDER">Cargando...</td>
                                <td class="tdStudentCareer_@item.ID_LENDER">Cargando...</td>
                                <td>@item.Books?.TITLE</td>
                                <td>
                                    @(item.STATUS ? "ACTIVO" : "ELIMINADO")
                                </td>
                                <td>
                                    <a href="@Url.Action("Edit", new { id = item.LOAN_ID })" class="btn btn-info" style="background: #1D4ED8">
                                        <i class="bi bi-eye"></i> Editar
                                    </a>
                                </td>
                            </tr>
                        }
                        numRegistros++;
                        if (numRegistros == numRegistrosPorPage)
                        {
                            numPage++;
                            numRegistros = 0;
                        }
                    }
                    @if (!hasResults)
                    {
                        <tr>
                            <td colspan="9" class="text-center">No se encontraron préstamos.</td>
                        </tr>
                    }
                    @if (numRegistros == 0) { numPage--; }
                </tbody>
            </table>
        </div>
        @if (ViewBag.TotalPaginas > 1)
        {
            <nav class="pagination-container">
                @if (ViewBag.PaginaActual > 1)
                {
                    <a class="page-btn" asp-action="Index" asp-route-page="@(ViewBag.PaginaActual - 1)">Anterior</a>
                }
                @for (int i = 1; i <= ViewBag.TotalPaginas; i++)
                {
                    <a class="page-btn @(i == ViewBag.PaginaActual ? "active" : "")" asp-action="Index" asp-route-page="@i">@i</a>
                }
                @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
                {
                    <a class="page-btn" asp-action="Index" asp-route-page="@(ViewBag.PaginaActual + 1)">Siguiente</a>
                }
            </nav>
        }
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var loanIds = @Html.Raw(Json.Serialize(loanIds));
        loanIds.forEach(function (id) {
            fnBuscarEstudiante(id);
        });
    });

    function fnBuscarEstudiante(id) {
        $.ajax({
            method: 'POST',
            url: '@Url.Action("BuscarEstudianteId", "Loans")',
            data: { id: id },
            datatype: 'json',
            success: function (data) {
                $('.tdStudentCode_' + id).text(data.studentCode || "No disponible");
                $('.tdStudentName_' + id).text(data.fullName || "No disponible");
                $('.tdStudentCareer_' + id).text(data.career || "No disponible");
            },
            error: function () {
                $('.tdStudentCode_' + id).text("No disponible");
                $('.tdStudentName_' + id).text("No disponible");
                $('.tdStudentCareer_' + id).text("No disponible");
            }
        });
    }

    document.getElementById('selectRedireccion').addEventListener('change', function () {
        var selectedOption = this.value;
        var redirectUrl = '';
        switch (selectedOption) {
            case 'opcion2': redirectUrl = '/Loans/LoansDelite'; break;
        }
        if (redirectUrl !== '') {
            window.location.href = redirectUrl;
        }
        this.selectedIndex = 0;
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const container = document.getElementById("tableContainer");
        setTimeout(() => container.classList.add("show"), 50);
        
        document.querySelectorAll(".page-btn").forEach(link => {
            link.addEventListener("click", function (e) {
                e.preventDefault();
                container.classList.remove("show");
                setTimeout(() => {
                    window.location.href = this.href;
                }, 500); 
            });
        });
    });
</script>
<script>
    $(document).ready(function() {
        @if (TempData["Alerta"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'success',
                    title: '¡Éxito!',
                    text: '@TempData["Alerta"]',
                    confirmButtonColor: '#198754'
                });
            </text>
        }
    });
</script>


