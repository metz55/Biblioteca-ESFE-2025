@using Library.DataAccess.Domain
@model Library.DataAccess.Domain.Posts
@{
    ViewData["TITLE"] = "Editar Publicación";
    List<PostsCategories> categories = ViewBag.categories as List<PostsCategories>;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title text-center" style="font-family: 'Poppins', sans-serif; font-weight: 600;">Editar Publicación</h4>
                <form asp-action="Update" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="ID" class="form-control" hidden value="@Model.ID" />
                    @if (ViewBag.error)
                    {
                        <div class="alert alert-danger text-center">
                            Hubo un problema al actualizar la Publicación
                        </div>
                    }
                    <div class="row">
                        <div class="mb-3 col-md-8">
                            <label asp-for="TITLE" class="form-label">Título</label>
                            <input asp-for="TITLE" class="form-control" value="@Model.TITLE" />
                            <span asp-validation-for="TITLE" class="text-danger">@ViewBag.titleError</span>
                        </div>
                        <div class="mb-3 col-md-4">
                            <label asp-for="CATEGORYID" class="form-label">Categoría</label>
                            <select asp-for="CATEGORYID" class="form-select">
                                <option value="0">Seleccionar</option>
                                @if (categories != null)
                                {
                                    @foreach (var item in categories)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="CATEGORYID" class="text-danger">@ViewBag.categoryError</span>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="CONTENT" class="form-label">Contenido</label>
                        <textarea asp-for="CONTENT" class="form-control markdown-editor" id="markdownEditor" rows="6">@Model.CONTENT</textarea>
                        <span asp-validation-for="CONTENT" class="text-danger">@ViewBag.contentError</span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="IMAGES_PATH" class="form-label">Imágenes</label>
                        <input name="IMAGES_PATH" type="file" class="form-control" multiple id="imageInput" accept="image/*" />
                        <span asp-validation-for="IMAGES_PATH" class="text-danger"></span>
                        <div class="preview-container d-flex flex-wrap gap-2 mt-2" id="previewContainer">
                            @if (Model.IMAGES != null && Model.IMAGES.Any())
                            {
                                foreach (var image in Model.IMAGES)
                                {
                                    <img src="@image.PATH" alt="Imagen" style="width: 100px; height: 100px; object-fit: cover; border: 1px solid #ccc; border-radius: 5px;" />
                                }
                            }
                        </div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="DOCS_PATH" class="form-label">Documentos</label>
                        <input name="DOCS_PATH" type="file" class="form-control" multiple id="docInput" accept=".pdf,.doc,.docx,.txt,.xls,.xlsx,.ppt,.pptx" />
                        <span asp-validation-for="DOCS_PATH" class="text-danger"></span>
                        <div class="doc-preview-container d-flex flex-wrap gap-2 mt-2" id="docPreviewContainer">
                            @if (Model.DOCS != null && Model.DOCS.Any())
                            {
                                foreach (var doc in Model.DOCS)
                                {
                                    <div style="display: flex; flex-direction: column; padding: 10px; border: 1px solid #dee2e6; border-radius: 5px; background-color: #fff; margin-bottom: 10px;">
                                        <i class="bi @(doc.Path.EndsWith(".pdf") ? "bi-file-earmark-pdf" : "bi-file-earmark")"
                                           style="font-size: 24px; margin-bottom: 5px; color: @(doc.Path.EndsWith(".pdf") ? "red" : "#007bff");"></i>
                                        <span style="font-weight: bold; margin-bottom: 5px;">@doc.Path.Split('/').Last()</span>
                                        <a href="@doc.Path" target="_blank" style="color: #0d6efd;">Ver Documento</a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="d-flex justify-content-center mt-4">
                        <button type="submit" class="btn btn-success me-2">
                            <i class="bi bi-floppy"></i> Guardar
                        </button>
                        <a asp-action="Manage" class="btn btn-secondary">
                            <i class="bi bi-reply-fill"></i> Regresar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        new EasyMDE({
            element: document.getElementById("markdownEditor"),
            autoDownloadFontAwesome: false,
            placeholder: "Escribe el contenido en formato Markdown...",
            spellChecker: true,
            status: false,
            toolbar: [
                "bold", "italic", "heading", "|",
                "quote", "unordered-list", "ordered-list", "|",
                "link", "code", "|",
                "preview", "side-by-side", "fullscreen"
            ],
        });
        const imageInput = document.getElementById('imageInput');
        const previewContainer = document.getElementById('previewContainer');
        imageInput.addEventListener('change', function () {
            const files = imageInput.files;
            if (files) {
                Array.from(files).forEach(file => {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.alt = file.name;
                        img.style.width = '100px';
                        img.style.height = '100px';
                        img.style.objectFit = 'cover';
                        img.style.border = '1px solid #ccc';
                        img.style.borderRadius = '5px';
                        previewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                });
            }
        });
        const docInput = document.getElementById('docInput');
        const docPreviewContainer = document.getElementById('docPreviewContainer');
        docInput.addEventListener('change', function () {
            Array.from(docInput.files).forEach(file => {
                const docPreview = document.createElement('div');
                docPreview.style.display = 'flex';
                docPreview.style.flexDirection = 'column';
                docPreview.style.padding = '10px';
                docPreview.style.border = '1px solid #dee2e6';
                docPreview.style.borderRadius = '5px';
                docPreview.style.backgroundColor = '#fff';
                docPreview.style.marginBottom = '10px';

                const fileIcon = document.createElement('i');
                fileIcon.className = file.type === "application/pdf" ? 'bi bi-file-earmark-pdf' : 'bi bi-file-earmark';
                fileIcon.style.fontSize = '24px';
                fileIcon.style.marginBottom = '5px';
                fileIcon.style.color = file.type === "application/pdf" ? 'red' : '#007bff';

                const fileName = document.createElement('span');
                fileName.textContent = file.name;
                fileName.style.fontWeight = 'bold';
                fileName.style.marginBottom = '5px';

                docPreview.appendChild(fileIcon);
                docPreview.appendChild(fileName);
                docPreviewContainer.appendChild(docPreview);
            });
        });
    });
</script>
<script>
    document.querySelector('.main-content')?.classList.remove('with-menu');
    document.querySelector('.main-content')?.classList.add('full-width');
</script>
