@using Library.DataAccess.Domain
@model Library.DataAccess.Domain.Posts

@{
    ViewData["TITLE"] = "Crear Publicación";
    List<PostsCategories> categories = ViewBag.categories as List<PostsCategories>;
}

<style>
    body {
        overflow-x: hidden; /* Evitar el desbordamiento horizontal */
    }

    .markdown-editor {
        min-height: 200px;
    }

    .preview-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 10px;
    }

    .preview-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
    .CodeMirror, .EasyMDEContainer {
        z-index: 1; /* Asegúrate de que sea menor que el z-index del nav */
    }
</style>
<div class="card">
    <div class="card-body">

<h1 class="d-flex justify-content-center">Crear Publicación</h1>
<hr />
<div class="container">
    <div class="d-flex justify-content-center">
        <form asp-action="Save" method="post" class="col-md-8" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (ViewBag.error)
            {
                <div class="alert alert-danger text-center w-100">
                    Hubo un problema al crear la Publicación
                </div>
            }
            <!-- Categoría y Título en una misma fila -->
            <div class="d-flex p-3">

                <div class="form-group me-3 flex-fill">
                    <label asp-for="TITLE" class="control-label">Título</label>
                    <input asp-for="TITLE" class="form-control" value=""/>
                    <span asp-validation-for="TITLE" class="text-danger">@ViewBag.titleError</span>
                </div>


                <div class="form-group me-3">
                    <label asp-for="CATEGORYID" class="control-label">Categoría</label>
                    <select asp-for="CATEGORYID" class="form-control" id="categoryDropdown">
                        <option value="0">Seleccionar</option>
                        @if (categories != null)
                        {
                            @foreach (var item in categories)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="CATEGORYID" class="text-danger">@ViewBag.categoryError</span>
                </div>
            </div>

            <!-- Editor Markdown para Contenido -->
            <div class="row mt-4">
                <div class="form-group col-md-12">
                    <label asp-for="CONTENT" class="control-label">Contenido</label>
                    <textarea asp-for="CONTENT" class="form-control markdown-editor" id="markdownEditor"></textarea>
                    <span asp-validation-for="CONTENT" class="text-danger">@ViewBag.contentError</span>
                </div>
            </div>

            <!-- Input para Imágenes -->
            <div class="row mt-3">
                <div class="form-group col-md-6">
                    <label asp-for="IMAGES_PATH" class="control-label">Imágenes</label>
                    <input name="IMAGES_PATH" type="file" class="form-control" multiple id="imageInput" />
                    <span asp-validation-for="IMAGES_PATH" class="text-danger"></span>
                    <div class="preview-container" id="previewContainer"></div>
                </div>
            </div>
            <!-- Input para Documentos -->
            <div class="row mt-3">
                <div class="form-group col-md-6">
                    <label asp-for="DOCS_PATH" class="control-label">Documentos</label>
                    <input name="DOCS_PATH" type="file" class="form-control" multiple id="docInput" />
                    <span asp-validation-for="DOCS_PATH" class="text-danger"></span>
                    <div class="doc-preview-container p-4" id="docPreviewContainer"></div>
                </div>
            </div>

            <!-- Botones de Acción -->
            <div class="form-group d-flex justify-content-end mt-4">
                <button type="submit" class="btn btn-success">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy" viewBox="0 0 16 16">
                        <path d="M11 2H9v3h2z" />
                        <path d="M1.5 0h11.586a1.5 1.5 0 0 1 1.06.44l1.415 1.414A1.5 1.5 0 0 1 16 2.914V14.5a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 14.5v-13A1.5.5 0 0 1 1.5 0M1 1.5v13a.5.5 0 0 0 .5.5H2v-4.5A1.5 1.5 0 0 1 3.5 9h9a1.5 1.5 0 0 1 1.5 1.5V15h.5a.5.5 0 0 0 .5-.5V2.914a.5.5 0 0 0-.146-.353l-1.415-1.415A.5.5 0 0 0 13.086 1H13v4.5A1.5 1.5 0 0 1 11.5 7h-7A1.5 1.5 0 0 1 3 5.5V1H1.5a.5.5 0 0 0-.5.5m3 4a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5V1H4zM3 15h10v-4.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5z" />
                    </svg>
                    Guardar
                </button>
                <div style="width: 10px;"></div> <!-- Espacio entre botones -->
                <a asp-action="Manage" class="btn btn-info">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-reply-fill" viewBox="0 0 16 16">
                        <path d="M5.921 11.9 1.353 8.62a.72.72 0 0 1 0-1.238L5.921 4.1A.716.716 0 0 1 7 4.719V6c1.5 0 6 0 7 8-2.5-4.5-7-4-7-4v1.281c0 .56-.606.898-1.079.62z" />
                    </svg>
                    Regresar
                </a>

            </div>
        </form>
    </div>
</div>
</div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Inicializar EasyMDE
        new EasyMDE({
            element: document.getElementById("markdownEditor"),
            autoDownloadFontAwesome: false,
            placeholder: "Escribe el contenido en formato Markdown...",
            spellChecker: true,
            status: false,
            toolbar: [
                "bold", "italic", "heading", "|", 
                "quote", "unordered-list", "ordered-list", "|",
                "link", "code", "|",
                "preview", "side-by-side", "fullscreen"
            ],
            
        });

        // Vista previa de imágenes
        const imageInput = document.getElementById('imageInput');
        const previewContainer = document.getElementById('previewContainer');

        imageInput.addEventListener('change', function () {
            previewContainer.innerHTML = ''; // Limpiar vistas previas anteriores
            const files = imageInput.files;

            if (files) {
                Array.from(files).forEach(file => {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.alt = file.name;
                        img.classList.add('preview-image');
                        previewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                });
            }
        });


        // Vista previa de nuevos documentos
        const docInput = document.getElementById('docInput');
        const docPreviewContainer = document.getElementById('docPreviewContainer');

        docInput.addEventListener('change', function () {
            docPreviewContainer.innerHTML = '';
            Array.from(docInput.files).forEach(file => {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const docPreview = document.createElement('div');
                    docPreview.classList.add('doc-preview');

                    const fileIcon = document.createElement('i');
                    fileIcon.classList.add('fa', file.type === "application/pdf" ? 'fa-file-pdf' : 'fa-file');
                    fileIcon.style.color = file.type === "application/pdf" ? 'red' : '#007bff';

                    const fileName = document.createElement('span');
                    fileName.textContent = file.name;

                    const fileLink = document.createElement('a');
                    fileLink.href = e.target.result;
                    fileLink.textContent = 'Ver Documento';
                    fileLink.target = '_blank';

                    docPreview.appendChild(fileIcon);
                    docPreview.appendChild(fileName);
                    docPreview.appendChild(fileLink);

                    docPreviewContainer.appendChild(docPreview);
                };
                reader.readAsDataURL(file);
            });
        });
    });
</script>
<script>
    document.querySelector('.main-content').classList.remove('with-menu');
    document.querySelector('.main-content').classList.add('full-width');
</script>
