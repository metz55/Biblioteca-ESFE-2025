@{
ViewData["Title"] = "Importar Libros";
}
<h2>Importar Libros desde Excel</h2>
@if (TempData["Creados"] != null || TempData["Actualizados"] != null)
{
    <div class="alert alert-success" role="alert">
        Se crearon: @TempData["Creados"] libros.<br />
        Se actualizaron: @TempData["Actualizados"] libros.
    </div>
}
@if (TempData["Errores"] != null)
{
    var errores = TempData["Errores"] as List<Library.Client.MVC.services.BookImportError>;
    if (errores != null && errores.Count > 0)
    {
        <div class="alert alert-danger" role="alert">
            <strong>Errores encontrados:</strong>
            <ul>
                @foreach (var e in errores)
                {
                    <li>Fila @e.Fila - @e.Campo: @e.Mensaje</li>
                }
            </ul>
        </div>
    }
}
<form asp-action="ImportBooks" asp-controller="BooksImport" method="post" enctype="multipart/form-data">
    <div class="mb-3">
        <label for="excelFile" class="form-label">Archivo Excel</label>
        <input type="file" class="form-control" id="excelFile" name="excelFile" accept=".xlsx,.xls" required />
    </div>
    <div class="form-check mb-3">
        <input type="checkbox" class="form-check-input" id="actualizarExistentes" name="actualizarExistentes" checked />
        <label class="form-check-label" for="actualizarExistentes">Actualizar libros existentes</label>
    </div>
    <div class="form-check mb-3">
        <input type="checkbox" class="form-check-input" id="crearCatalogosPorNombre" name="crearCatalogosPorNombre" checked />
        <label class="form-check-label" for="crearCatalogosPorNombre">Crear catálogos automáticamente si no existen</label>
    </div>
    <button type="submit" class="btn btn-primary">Importar</button>
</form>
